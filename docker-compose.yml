# docker-compose.yml for starting edirom-online with digilib using nginx reverse proxy

services:
  
  # Reverse Proxy - einziger externer Zugangspunkt
  nginx:
    image: nginx:alpine
    container_name: proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - edirom-online-backend
      - edirom-online-frontend
      - digilib
    networks:
      - app-network

  # Ihre bestehenden Services (Dashboard = eXist-db Backend)
  edirom-online-backend:
    container_name: eXist-db
    build:
      context: ./backend   
      dockerfile: Dockerfile
      args:
        REPO: ${BE_REPO:-https://github.com/Edirom/Edirom-Online-Backend.git}
        BRANCH: ${BE_BRANCH:-develop}
        EDITION: ${EDITION_XAR}
    # Keine externen Ports mehr - nur intern erreichbar
    expose:
      - "8080"
    networks:
      - app-network

  # Edirom Frontend (nginx)
  edirom-online-frontend:
    container_name: edirom-service
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REPO: ${FE_REPO:-https://github.com/Edirom/Edirom-Online-Frontend.git}
        BRANCH: ${FE_BRANCH:-develop}
    # Keine externen Ports mehr - nur intern erreichbar
    expose:
      - "80"
    networks:
      - app-network

  # Digilib Service (fertiges Image)
  digilib:
    image: maxregerinstitut/mri-digilib:2.12.4
    container_name: digilib-service
    expose:
      - "8080"  # Standard Tomcat Port f√ºr Digilib
    networks:
      - app-network

networks:
  app-network:
    driver: bridge